// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _TopoDS_Builder3D_HeaderFile
#define _TopoDS_Builder3D_HeaderFile

#ifndef _TopoDS_Builder_HeaderFile
#include <TopoDS_Builder.hxx>
#endif
class Standard_NullObject;
class TopoDS_Shell;
class TopoDS_Solid;
class TopoDS_CompSolid;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif


//! Provides services to build compsolids in builder <br>
//! objects inheriting this abstract framework. <br>
//! A case in point is BRep_Builder. <br>
class TopoDS_Builder3D  : public TopoDS_Builder {

public:

    void* operator new(size_t,void* anAddress) 
      {
        return anAddress;
      }
    void* operator new(size_t size) 
      { 
        return Standard::Allocate(size); 
      }
    void  operator delete(void *anAddress) 
      { 
        if (anAddress) Standard::Free((Standard_Address&)anAddress); 
      }
 // Methods PUBLIC
 // 

//! Make an empty Shell. <br>
Standard_EXPORT   void MakeShell(TopoDS_Shell& S) const;

//! Make a Solid covering the whole 3D space. <br>
Standard_EXPORT   void MakeSolid(TopoDS_Solid& S) const;

//! Make an empty composite Solid. <br>
Standard_EXPORT   void MakeCompSolid(TopoDS_CompSolid& C) const;





protected:

 // Methods PROTECTED
 // 


Standard_EXPORT TopoDS_Builder3D();


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //


};





// other Inline functions and methods (like "C++: function call" methods)
//


#endif
