// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _TopLoc_SListOfItemLocation_HeaderFile
#define _TopLoc_SListOfItemLocation_HeaderFile

#ifndef _Handle_TopLoc_SListNodeOfSListOfItemLocation_HeaderFile
#include <Handle_TopLoc_SListNodeOfSListOfItemLocation.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
class TopLoc_SListNodeOfSListOfItemLocation;
class Standard_NoSuchObject;
class TopLoc_ItemLocation;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif


class TopLoc_SListOfItemLocation  {

public:

    void* operator new(size_t,void* anAddress) 
      {
        return anAddress;
      }
    void* operator new(size_t size) 
      { 
        return Standard::Allocate(size); 
      }
    void  operator delete(void *anAddress) 
      { 
        if (anAddress) Standard::Free((Standard_Address&)anAddress); 
      }
 // Methods PUBLIC
 // 


Standard_EXPORT TopLoc_SListOfItemLocation();


Standard_EXPORT TopLoc_SListOfItemLocation(const TopLoc_ItemLocation& anItem,const TopLoc_SListOfItemLocation& aTail);


Standard_EXPORT TopLoc_SListOfItemLocation(const TopLoc_SListOfItemLocation& Other);


Standard_EXPORT   TopLoc_SListOfItemLocation& Assign(const TopLoc_SListOfItemLocation& Other) ;
  TopLoc_SListOfItemLocation& operator =(const TopLoc_SListOfItemLocation& Other) 
{
  return Assign(Other);
}


  Standard_Boolean IsEmpty() const;


Standard_EXPORT   void Clear() ;
~TopLoc_SListOfItemLocation()
{
  Clear();
}



Standard_EXPORT  const TopLoc_ItemLocation& Value() const;


Standard_EXPORT   TopLoc_ItemLocation& ChangeValue() ;


Standard_EXPORT   void SetValue(const TopLoc_ItemLocation& anItem) ;


Standard_EXPORT  const TopLoc_SListOfItemLocation& Tail() const;


Standard_EXPORT   TopLoc_SListOfItemLocation& ChangeTail() ;


Standard_EXPORT   void SetTail(const TopLoc_SListOfItemLocation& aList) ;

  void Construct(const TopLoc_ItemLocation& anItem) ;

  TopLoc_SListOfItemLocation Constructed(const TopLoc_ItemLocation& anItem) const;

  void ToTail() ;

  void Initialize(const TopLoc_SListOfItemLocation& aList) ;

  Standard_Boolean More() const;

  void Next() ;





protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


 // Fields PRIVATE
 //
Handle_TopLoc_SListNodeOfSListOfItemLocation myNode;


};

#define Item TopLoc_ItemLocation
#define Item_hxx <TopLoc_ItemLocation.hxx>
#define TCollection_SListNode TopLoc_SListNodeOfSListOfItemLocation
#define TCollection_SListNode_hxx <TopLoc_SListNodeOfSListOfItemLocation.hxx>
#define Handle_TCollection_SListNode Handle_TopLoc_SListNodeOfSListOfItemLocation
#define TCollection_SListNode_Type_() TopLoc_SListNodeOfSListOfItemLocation_Type_()
#define TCollection_SList TopLoc_SListOfItemLocation
#define TCollection_SList_hxx <TopLoc_SListOfItemLocation.hxx>

#include <TCollection_SList.lxx>

#undef Item
#undef Item_hxx
#undef TCollection_SListNode
#undef TCollection_SListNode_hxx
#undef Handle_TCollection_SListNode
#undef TCollection_SListNode_Type_
#undef TCollection_SList
#undef TCollection_SList_hxx


// other Inline functions and methods (like "C++: function call" methods)
//


#endif
