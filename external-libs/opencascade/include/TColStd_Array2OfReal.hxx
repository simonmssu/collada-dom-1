// File generated by CPPExt (Value)
//
//                     Copyright (C) 1991 - 2000 by  
//                      Matra Datavision SA.  All rights reserved.
//  
//                     Copyright (C) 2001 - 2004 by
//                     Open CASCADE SA.  All rights reserved.
// 
// This file is part of the Open CASCADE Technology software.
//
// This software may be distributed and/or modified under the terms and
// conditions of the Open CASCADE Public License as defined by Open CASCADE SA
// and appearing in the file LICENSE included in the packaging of this file.
//  
// This software is distributed on an "AS IS" basis, without warranty of any
// kind, and Open CASCADE SA hereby disclaims all such warranties,
// including without limitation, any warranties of merchantability, fitness
// for a particular purpose or non-infringement. Please see the License for
// the specific terms and conditions governing rights and limitations under the
// License.

#ifndef _TColStd_Array2OfReal_HeaderFile
#define _TColStd_Array2OfReal_HeaderFile

#ifndef _Standard_Integer_HeaderFile
#include <Standard_Integer.hxx>
#endif
#ifndef _Standard_Boolean_HeaderFile
#include <Standard_Boolean.hxx>
#endif
#ifndef _Standard_Address_HeaderFile
#include <Standard_Address.hxx>
#endif
#ifndef _Standard_Real_HeaderFile
#include <Standard_Real.hxx>
#endif
class Standard_RangeError;
class Standard_OutOfRange;
class Standard_OutOfMemory;
class Standard_DimensionMismatch;


#ifndef _Standard_HeaderFile
#include <Standard.hxx>
#endif
#ifndef _Standard_Macro_HeaderFile
#include <Standard_Macro.hxx>
#endif


class TColStd_Array2OfReal  {

public:

    void* operator new(size_t,void* anAddress) 
      {
        return anAddress;
      }
    void* operator new(size_t size) 
      { 
        return Standard::Allocate(size); 
      }
    void  operator delete(void *anAddress) 
      { 
        if (anAddress) Standard::Free((Standard_Address&)anAddress); 
      }
 // Methods PUBLIC
 // 


Standard_EXPORT TColStd_Array2OfReal(const Standard_Integer R1,const Standard_Integer R2,const Standard_Integer C1,const Standard_Integer C2);


Standard_EXPORT TColStd_Array2OfReal(const Standard_Real& Item,const Standard_Integer R1,const Standard_Integer R2,const Standard_Integer C1,const Standard_Integer C2);


Standard_EXPORT   void Init(const Standard_Real& V) ;


Standard_EXPORT   void Destroy() ;
~TColStd_Array2OfReal()
{
  Destroy();
}



Standard_EXPORT  const TColStd_Array2OfReal& Assign(const TColStd_Array2OfReal& Other) ;
 const TColStd_Array2OfReal& operator =(const TColStd_Array2OfReal& Other) 
{
  return Assign(Other);
}


  Standard_Integer ColLength() const;

  Standard_Integer RowLength() const;

  Standard_Integer LowerCol() const;

  Standard_Integer LowerRow() const;

  Standard_Integer UpperCol() const;

  Standard_Integer UpperRow() const;

  void SetValue(const Standard_Integer Row,const Standard_Integer Col,const Standard_Real& Value) ;

 const Standard_Real& Value(const Standard_Integer Row,const Standard_Integer Col) const;
 const Standard_Real& operator()(const Standard_Integer Row,const Standard_Integer Col) const
{
  return Value(Row,Col);
}


  Standard_Real& ChangeValue(const Standard_Integer Row,const Standard_Integer Col) ;
  Standard_Real& operator()(const Standard_Integer Row,const Standard_Integer Col) 
{
  return ChangeValue(Row,Col);
}






protected:

 // Methods PROTECTED
 // 


 // Fields PROTECTED
 //


private: 

 // Methods PRIVATE
 // 


Standard_EXPORT TColStd_Array2OfReal(const TColStd_Array2OfReal& AnArray);


Standard_EXPORT   void Allocate() ;


 // Fields PRIVATE
 //
Standard_Integer myLowerRow;
Standard_Integer myLowerColumn;
Standard_Integer myUpperRow;
Standard_Integer myUpperColumn;
Standard_Boolean myDeletable;
Standard_Address myData;


};

#define Array2Item Standard_Real
#define Array2Item_hxx <Standard_Real.hxx>
#define TCollection_Array2 TColStd_Array2OfReal
#define TCollection_Array2_hxx <TColStd_Array2OfReal.hxx>

#include <TCollection_Array2.lxx>

#undef Array2Item
#undef Array2Item_hxx
#undef TCollection_Array2
#undef TCollection_Array2_hxx


// other Inline functions and methods (like "C++: function call" methods)
//


#endif
